/** Hacker theme variables */
@import url("https://fonts.googleapis.com/css?family=Source+Code+Pro:400,700");
@import url("https://fonts.googleapis.com/css?family=Anonymous+Pro");
:root { --base-color: #00ff00; --border: dashed 1px rgba(0, 255, 0, 0.9); --selection-background: rgba(0, 255, 0, 0.99); --selection-text: #000; --background-color: #000; --text-color: var(--base-color); --placeholder-color: var(--base-color); --link-color: var(--base-color); --code-color-1: #aaaaaa; --code-color-2: #ffffcc; --code-color-3: #F00000; --code-color-4: #F0A0A0; --code-color-5: #b38aff; --code-color-6: #5ba711; --code-color-7: #e4e477; --code-color-8: #000080; --code-color-9: #05ca05; --code-color-10: #888888; --code-color-11: #555555; --code-color-12: #800080; --code-color-13: #00d4d4; --code-color-14: #00c1c1; --code-color-15: #ed9d13; --code-color-16: #1e90ff; --code-color-17: #800000; --code-color-18: #bbbbbb; }

/** Style variables */
/** Global */
body { background-color: var(--background-color); margin: 0 auto; padding: 0; font-family: "Source Code Pro", monospace; font-size: 12.5px; color: var(--text-color); text-align: left; line-height: 1.5 !important; }

h1, h2, h3, h4, h5, h6 { font-size: 12.5px; margin: 0px; margin-top: 22px; font-weight: bold; color: var(--text-color); }

p, ul, ol { margin: 0px; color: var(--text-color); }

a { text-decoration: underline; color: var(--link-color); }

a:hover { color: var(--background-color); background-color: var(--base-color); }

@media only screen and (max-device-width: 500px) { * { font-size: 12px !important; } }

/** Layout */
.container { width: 90%; max-width: 600px; margin-right: auto; margin-left: auto; }

p { word-wrap: break-word; word-break: break-word; white-space: pre-wrap; margin-bottom: 15px; }

footer { color: var(--text-color); border-top: var(--border); margin: 20px auto 15px; padding-top: 10px; text-align: right; }

header { margin-top: 25px; margin-bottom: 10px; }

header p { text-align: left; margin: 0; }

footer { margin-bottom: 20px; }

/** Highlight/Markup */
::selection { background: var(--selection-background); color: var(--selection-text); }

::-moz-selection { background: var(--selection-background); color: var(--selection-text); }

/** Lists */
:not(.menu) > ul { list-style: none; padding-left: 0; }

:not(.menu) > ul { list-style-type: none; }

:not(.menu) > ul > li:before { content: "-"; margin-right: 9px; }

/** Header/Navigation */
.menu { border-top: var(--border); border-bottom: var(--border); margin-bottom: 25px; }

.menu ul { margin-top: 12px; margin-bottom: 12px; padding-left: 0px; list-style-type: none; text-align: right; }

.menu ul li { display: inline; margin-left: 10px; }

.menu ul li a { text-decoration: none; color: var(--text-color); }

.menu ul li a:hover { text-decoration: none; color: var(--background-color); background-color: var(--base-color); }

/** Form */
input, select, textarea { padding: 0; margin: 0; -webkit-appearance: none; -webkit-border-radius: 0; border: none; }

input[type=text], select, textarea { width: 100%; resize: none; background-color: var(--background-color); color: var(--text-color); caret-color: var(--text-color); font-size: 12.5px; font-family: "Source Code Pro", monospace; line-height: 1.5; }

input, select, textarea, textarea::-webkit-input-placeholder { text-indent: 0px; }

::placeholder { color: var(--placeholder-color); opacity: 1; }

:-ms-input-placeholder { color: var(--placeholder-color); }

::-ms-input-placeholder { color: var(--placeholder-color); }

input[type=submit] { font-size: 12.5px; font-family: "Source Code Pro", monospace; line-height: 1.5; cursor: pointer; color: var(--link-color); background-color: var(--background-color); }

input[type=submit]:hover { color: var(--background-color); background-color: var(--base-color); }

*:focus { outline: none; }

textarea { vertical-align: top; }

/** Code and syntax highlighting */
.lineno { color: var(--code-color-1); margin-right: 15px; }

figure.highlight { margin: 5px 0; }

pre { background-color: var(--background-color); border: none; padding: 0; margin: 0; overflow: auto; font-size: 12.5px; color: var(--text-color); line-height: 1.7 !important; font-family: "Source Code Pro", monospace !important; }

.highlight .hll { background-color: var(--code-color-2); }

.highlight .c { color: var(--code-color-1); font-style: italic; }

/* Comment */
.highlight .err { color: var(--code-color-3); background-color: var(--code-color-4); }

/* Error */
.highlight .k { color: var(--code-color-5); }

/* Keyword */
.highlight .cm { color: var(--code-color-1); font-style: italic; }

/* Comment.Multiline */
.highlight .cp { color: var(--code-color-6); }

/* Comment.Preproc */
.highlight .c1 { color: var(--code-color-1); font-style: italic; }

/* Comment.Single */
.highlight .cs { color: var(--code-color-5); font-style: italic; }

/* Comment.Special */
.highlight .gd { color: var(--code-color-7); }

/* Generic.Deleted */
.highlight .ge { font-style: italic; }

/* Generic.Emph */
.highlight .gr { color: var(--code-color-7); }

/* Generic.Error */
.highlight .gh { color: var(--code-color-8); font-weight: bold; }

/* Generic.Heading */
.highlight .gi { color: var(--code-color-9); }

/* Generic.Inserted */
.highlight .go { color: var(--code-color-10); }

/* Generic.Output */
.highlight .gp { color: var(--code-color-11); }

/* Generic.Prompt */
.highlight .gs { font-weight: bold; }

/* Generic.Strong */
.highlight .gu { color: var(--code-color-12); font-weight: bold; }

/* Generic.Subheading */
.highlight .gt { color: var(--code-color-7); }

/* Generic.Traceback */
.highlight .kc { color: var(--code-color-5); }

/* Keyword.Constant */
.highlight .kd { color: var(--code-color-5); }

/* Keyword.Declaration */
.highlight .kn { color: var(--code-color-5); }

/* Keyword.Namespace */
.highlight .kp { color: var(--code-color-5); }

/* Keyword.Pseudo */
.highlight .kr { color: var(--code-color-5); }

/* Keyword.Reserved */
.highlight .kt { color: var(--code-color-13); }

/* Keyword.Type */
.highlight .m { color: var(--code-color-14); }

/* Literal.Number */
.highlight .s { color: var(--code-color-15); }

/* Literal.String */
.highlight .na { color: var(--code-color-16); }

/* Name.Attribute */
.highlight .nb { color: var(--code-color-13); }

/* Name.Builtin */
.highlight .nc { color: var(--code-color-9); text-decoration: underline; }

/* Name.Class */
.highlight .no { color: var(--code-color-7); }

/* Name.Constant */
.highlight .nd { color: var(--code-color-10); }

/* Name.Decorator */
.highlight .ni { color: var(--code-color-17); font-weight: bold; }

/* Name.Entity */
.highlight .nf { color: var(--code-color-9); }

/* Name.Function */
.highlight .nn { color: var(--code-color-13); text-decoration: underline; }

/* Name.Namespace */
.highlight .nt { color: var(--code-color-16); font-weight: bold; }

/* Name.Tag */
.highlight .nv { color: var(--code-color-7); }

/* Name.Variable */
.highlight .ow { color: var(--code-color-5); }

/* Operator.Word */
.highlight .w { color: var(--code-color-18); }

/* Text.Whitespace */
.highlight .mf { color: var(--code-color-14); }

/* Literal.Number.Float */
.highlight .mh { color: var(--code-color-14); }

/* Literal.Number.Hex */
.highlight .mi { color: var(--code-color-14); }

/* Literal.Number.Integer */
.highlight .mo { color: var(--code-color-14); }

/* Literal.Number.Oct */
.highlight .sb { color: var(--code-color-15); }

/* Literal.String.Backtick */
.highlight .sc { color: var(--code-color-15); }

/* Literal.String.Char */
.highlight .sd { color: var(--code-color-15); }

/* Literal.String.Doc */
.highlight .s2 { color: var(--code-color-15); }

/* Literal.String.Double */
.highlight .se { color: var(--code-color-15); }

/* Literal.String.Escape */
.highlight .sh { color: var(--code-color-15); }

/* Literal.String.Heredoc */
.highlight .si { color: var(--code-color-15); }

/* Literal.String.Interpol */
.highlight .sx { color: var(--code-color-15); }

/* Literal.String.Other */
.highlight .sr { color: var(--code-color-14); }

/* Literal.String.Regex */
.highlight .s1 { color: var(--code-color-15); }

/* Literal.String.Single */
.highlight .ss { color: var(--code-color-5); }

/* Literal.String.Symbol */
.highlight .bp { color: var(--code-color-13); }

/* Name.Builtin.Pseudo */
.highlight .vc { color: var(--code-color-7); }

/* Name.Variable.Class */
.highlight .vg { color: var(--code-color-7); }

/* Name.Variable.Global */
.highlight .vi { color: var(--code-color-7); }

/* Name.Variable.Instance */
.highlight .il { color: var(--code-color-14); }

/* Literal.Number.Integer.Long */
.typewriter { text-align: center; position: relative; top: 50%; font-weight: normal; font-size: 1em !important; overflow: hidden; /* Ensures the content is not revealed until the animation */ border-right: 0.15em solid rgba(255, 255, 255, 0.75); /* The typwriter cursor */ white-space: nowrap; /* Keeps the content on a single line */ margin: 0 auto; /* Gives that scrolling effect as the typing happens */ letter-spacing: .15em; /* Adjust as needed */ animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite; }

@media screen and (max-width: 600px) { .typewriter { font-size: 0.65em !important; } }

/* The typing effect */
@keyframes typing { from { width: 0; }
  to { width: 100%; } }

/* The typewriter cursor effect */
@keyframes blink-caret { from, to { border-color: transparent; }
  50% { border-color: rgba(255, 255, 255, 0.75); } }

.line-1 { font-weight: normal; position: relative; top: 50%; width: 24em; margin: 0 auto; border-right: 2px solid rgba(255, 255, 255, 0.75); font-size: 180%; text-align: center; white-space: nowrap; overflow: hidden; transform: translateY(-50%); }

.line-2 { font-weight: normal; position: relative; top: 50%; width: 24em; margin: 0 auto; font-size: 180%; text-align: center; white-space: nowrap; overflow: hidden; transform: translateY(-50%); }

/* Animation */
.anim-typewriter { animation: typewriter 4s steps(44) 1s 1 normal both, blinkTextCursor 500ms steps(44) infinite normal; }

@keyframes typewriter { from { width: 0; }
  to { width: 20em; } }

@keyframes blinkTextCursor { from { border-right-color: rgba(255, 255, 255, 0.75); }
  to { border-right-color: transparent; } }

.anim-typewriter2 { animation: typewriter2 4s steps(44) 1s 1 normal both, blinkTextCursor 500ms steps(44) infinite normal; }

@keyframes typewriter2 { from { width: 0; }
  to { width: 50em; } }

.text-center { text-align: center; }

.btn { text-decoration: none; font-size: 150%; cursor: pointer; }

.wrapper { display: flex; justify-content: center; }

@keyframes wait { 0% { opacity: 0; }
  100% { opacity: 0; } }

@keyframes fade-in { 0% { opacity: 0; }
  100% { opacity: 1; } }

.fade-in-text { animation: wait 5000ms, fade-in 800ms 5000ms; }

.fade-in-text2 { animation: wait 3000ms, fade-in 800ms 3000ms; }

#container1 { height: 50vh; background: #000; }

.center { text-align: center; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); }

#cc { white-space: pre; }

.el-st { font-weight: bold; white-space: pre-line; }

.el-sp.is-changing { animation: changing 0.1s infinite; }

.el-sp { transition: all 0.1s; position: relative; will-change: transform, opacity; }

.el-sp:after { content: attr(data-txt); color: #eee; position: absolute; top: 0; left: 0; opacity: 0; will-change: transform, opacity; }

.el-sp.is-changing:after { animation: changingAfter 0.4s infinite alternate; }

.scroll { margin-top: 40px; color: #008f11; display: inline-block; padding-bottom: 3px; padding-right: 40px; position: relative; }

.scroll:after { content: ''; position: absolute; left: calc(100% - 35px); top: 0; animation: dots 2s infinite; }

@keyframes changing { 0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; } }

@keyframes changingAfter { 0% { opacity: 0.3;
    transform: translateX(10px) scaleX(2); }
  50% { opacity: 0;
    transform: translateX(0) scaleX(2); }
  100% { opacity: 0.3;
    transform: translateX(-10px) scaleX(2); } }

@keyframes dots { 0% { content: ''; }
  25% { content: '.'; }
  50% { content: '..'; }
  75% { content: '...'; } }

.glitch { position: relative; mix-blend-mode: lighten; }

.glitch:before, .glitch:after { content: attr(data-text); position: absolute; top: 0; width: 100%; background: transparent; clip: rect(0, 0, 0, 0); }

.glitch:before { left: -4px; text-shadow: 6px 0 #ff00ff; }

.glitch:before { text-shadow: 4px 0 #ff00ff; animation: glitch-anim-1 0.4s infinite ease-in-out alternate-reverse; }

.glitch:after { left: 4px; text-shadow: -3px 0 #00ffc8; }

.glitch:after { text-shadow: -5px 0 #00ffc8; animation: glitch-anim-2 0.3s infinite ease-in-out alternate-reverse; }

@keyframes glitch-anim-1 { 0% { clip: rect(30px, 9999px, 10px, 0); }
  25% { clip: rect(15px, 9999px, 100px, 0); }
  50% { clip: rect(50px, 9999px, 105px, 0); }
  75% { clip: rect(2px, 9999px, 80px, 0); }
  100% { clip: rect(90px, 9999px, 100px, 0); } }

@keyframes glitch-anim-2 { 0% { top: -1px;
    left: 50px;
    clip: rect(65px, 9999px, 119px, 0); }
  25% { top: -10px;
    left: 1px;
    clip: rect(79px, 9999px, 19px, 0); }
  50% { top: -7px;
    left: 20px;
    clip: rect(65px, 9999px, 11px, 0); }
  75% { top: 10px;
    right: 20px;
    left: -50px;
    clip: rect(95px, 9999px, 53px, 0); }
  100% { top: -5px;
    left: -7px;
    clip: rect(31px, 9999px, 149px, 0); } }

.hide { display: none; }

.show { display: block; }

/*# sourceMappingURL=main-hacker.css.map */
